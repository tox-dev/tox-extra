[tox]
minversion = 4.0.0b2
skipsdist = true
ignore_path = tests
envlist =
    py
    py-devel
    lint
    packaging
    coverage

[testenv]
usedevelop = true
skip_install = false
deps =
    -e .
    testfixtures
    pytest<7.0.0
    pytest-mock
    pytest-cov
    devel: tox>=4.0.0b1
setenv =
    COVERAGE_FILE={env:COVERAGE_FILE:{toxworkdir}{/}.coverage.{envname}.db}
    GIT_AUTHOR_NAME="John Doe"
    GIT_AUTHOR_EMAIL=noreply@example.com
    GIT_COMMITTER_NAME="John Doe"
    GIT_COMMITTER_EMAIL=noreply@example.com
commands =
    pytest -VV
    #;  --cov=tox_extra
    pytest {posargs:\
        --no-cov-on-fail \
        --cov-append \
        --cov-report=xml:{toxworkdir}/coverage-{envname}.xml \
        }
allowlist_externals =
    sh
    rm

[testenv:coverage]
parallel_show_output = true
depends = py3{6,7,8,9,10}
setenv =
commands =
    coverage combine --keep {toxworkdir}
    coverage report -m -i

[testenv:lint]
skip_install = true
deps =
    pre_commit
commands =
    python -m pre_commit run {posargs:--all}

[testenv:packaging]
description =
    Do packaging/distribution. If tag is not present or PEP440 compliant upload to
    PYPI could fail
# `usedevelop = true` overrides `skip_install` instruction, it's unwanted
usedevelop = false
# don't install package in this env
skip_install = true
deps =
    build >= 0.9.0
    twine >= 4.0.1
setenv =
commands =
    rm -rfv {toxinidir}/dist/
    python -m build \
      --outdir {toxinidir}/dist/ \
      {toxinidir}
    # metadata validation
    python -m twine check --strict {toxinidir}/dist/*
  # Install the wheel
  sh -c "python3 -m pip install {toxinidir}/dist/*.whl"

[flake8]
exclude = .tox/,.venv/,dist/,build/,.eggs/
# To match black
max-line-length = 88
