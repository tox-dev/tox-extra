[tox]
minversion = 3.18.0
skipsdist = true
ignore_path = tests
envlist =
    py
    py-devel
    lint
    packaging
    coverage

[testenv]
usedevelop = true
skip_install = false
deps =
    -e .
    testfixtures
    pytest<7.0.0
    pytest-mock
    pytest-cov
    devel: tox>=4.0.0b1
setenv =
    COVERAGE_FILE={env:COVERAGE_FILE:{toxworkdir}{/}.coverage.{envname}.db}
    GIT_AUTHOR_NAME="John Doe"
    GIT_AUTHOR_EMAIL=noreply@example.com
    GIT_COMMITTER_NAME="John Doe"
    GIT_COMMITTER_EMAIL=noreply@example.com
commands =
    pytest -VV
    #;  --cov=tox_extra
    pytest {posargs:\
        --no-cov-on-fail \
        --cov-append \
        --cov-report=xml:{toxworkdir}/coverage-{envname}.xml \
        }
allowlist_externals =
    sh

[testenv:coverage]
parallel_show_output = true
depends = py3{6,7,8,9,10}
setenv =
commands =
    coverage combine --keep {toxworkdir}
    coverage report -m -i

[testenv:lint]
skip_install = true
deps =
    pre_commit
commands =
    python -m pre_commit run {posargs:--all}

[testenv:packaging]
description =
  Build package, verify metadata, install package
deps =
  build >= 0.5.0
  twine >= 3.4.1
skip_install = true
# Ref: https://twitter.com/di_codes/status/1044358639081975813
commands =
  # build wheel and sdist using PEP-517
  {envpython} -c 'import os.path, shutil, sys; \
  dist_dir = os.path.join("{toxinidir}", "dist"); \
  os.path.isdir(dist_dir) or sys.exit(0); \
  print("Removing \{!s\} contents...".format(dist_dir), file=sys.stderr); \
  shutil.rmtree(dist_dir)'
  {envpython} -m build \
    --outdir {toxinidir}/dist/ \
    {toxinidir}
  # Validate metadata using twine
  twine check {toxinidir}/dist/*
  # Install the wheel
  sh -c "python3 -m pip install {toxinidir}/dist/*.whl"

[flake8]
exclude = .tox/,.venv/,dist/,build/,.eggs/
# To match black
max-line-length = 88
